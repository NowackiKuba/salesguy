// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

// prisma/schema.prisma
datasource db {
  provider  = "postgresql"
  url  	    = env("DATABASE_URL")
  // uncomment next line if you use Prisma <5.10
  directUrl = env("DATABASE_URL_UNPOOLED")
}

enum Role { 
  ADMIN
  MANAGER
  EMPLOYEE
}

model User { 
  id String @id @default(cuid())
  first_name String
  last_name String
  username String
  email String @unique
  clerkId String @unique
  img_url String?
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  role Role @default(ADMIN)
  phone_number String?
  location String?
  work_email String?
  work_phone String?  
  company_id String?
  company Company? @relation(fields: [company_id], references: [id], name: "CompanyEmployees")
  owned_company Company?
  invites Invite[]
}

model Company { 
  id String @id @default(cuid())
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  employees User[] @relation("CompanyEmployees")
  logo_url String?
  location String?
  phone_number String?
  clerkId String
  slug String
  name String
  owner_id String @unique
  max_members Int
  owner User @relation(fields: [owner_id], references: [email])
  invites Invite[]
}


model Invite { 
  id Int @id @default(autoincrement())
  title String
  description String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  status String
  company_id String
  company Company @relation(fields: [company_id], references: [id])
  user_id String
  user User @relation(fields: [user_id], references: [clerkId])
  role Role
}